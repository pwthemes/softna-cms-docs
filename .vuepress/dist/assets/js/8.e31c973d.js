(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{148:function(t,a,s){t.exports=s.p+"assets/img/Add-widget-to-the-layout-manager.ab2a4bd5.png"},153:function(t,a,s){"use strict";s.r(a);var e=[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"widgets"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#widgets","aria-hidden":"true"}},[t._v("#")]),t._v(" Widgets")]),t._v(" "),e("h4",{attrs:{id:"for-new-custom-widget-you-need-to"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-new-custom-widget-you-need-to","aria-hidden":"true"}},[t._v("#")]),t._v(" For new custom widget you need to:")]),t._v(" "),e("ul",[e("li",[t._v("create new template")]),t._v(" "),e("li",[t._v("assign new template to the widgets list,")]),t._v(" "),e("li",[t._v("create widget view (php) file")]),t._v(" "),e("li",[t._v("and optionally add it to layout manager.")])]),t._v(" "),e("h2",{attrs:{id:"create-widget-template"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-widget-template","aria-hidden":"true"}},[t._v("#")]),t._v(" Create Widget Template")]),t._v(" "),e("p",[t._v("Go to "),e("em",[e("strong",[t._v("setup > template")])]),t._v(", create new template and assign fields to it."),e("br"),t._v("\nThere is no required fields here (except title), but if you want your widget to support widget headline, you need to asign "),e("em",[e("strong",[t._v("heading")])]),t._v(" field to it.")]),t._v(" "),e("p",[t._v("If you are planning to add options to your widget, add "),e("em",[e("strong",[t._v("TAB_options")])]),t._v(" to your template and add all option fields under the option tab ("),e("em",[t._v("this is recommended")]),t._v(").")]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("Options Tab")]),t._v(" "),e("p",[t._v("If u have options for your widget, always add them under options tab ("),e("em",[e("strong",[t._v("TAB_options")])]),t._v(")")])]),t._v(" "),e("p",[t._v("Few more things to do:")]),t._v(" "),e("ul",[e("li",[t._v("On "),e("strong",[t._v("Family")]),t._v(" tab, for "),e("em",[e("strong",[t._v("Allowed template(s) for parents")])]),t._v(" select "),e("strong",[t._v("widgets")]),t._v(".")]),t._v(" "),e("li",[t._v("On "),e("strong",[t._v("Advanced")]),t._v(" tab, add type in tag "),e("em",[t._v("Widgets")]),t._v(" and select an icon below. If you want to use custom svg icon, upload it to "),e("em",[t._v("/site/modules/softna-widgets/svg/")]),t._v(" (icon needs to be have same name as your template).")]),t._v(" "),e("li",[t._v("Save and close.")]),t._v(" "),e("li",[t._v("Now we need to assign this new template to the widgets list. Edit "),e("strong",[t._v("Widgets")]),t._v(" template, go to "),e("strong",[t._v("Family")]),t._v(" tab and for "),e("em",[e("strong",[t._v("Allowed template(s) for children")])]),t._v(" select template you just created.")]),t._v(" "),e("li",[t._v("Your new widget template is now ready...")])]),t._v(" "),e("h2",{attrs:{id:"create-layout-manager-option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-layout-manager-option","aria-hidden":"true"}},[t._v("#")]),t._v(" Create Layout Manager Option")]),t._v(" "),e("p",[t._v("In most cases when creating custom widget or a page template, you can skip this step. You probably not going to have multiple layouts for a custom page or widget. Only elements built-in to the cms core should have multiple layout options.")]),t._v(" "),e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("Optional")]),t._v(" "),e("p",[t._v("Layout manager is optional, if you are making custom element just for a current project, it's better to skip this step.")])]),t._v(" "),e("p",[t._v("But if you still want your widget to support multiple layouts, you need to create layout manager options for it:")]),t._v(" "),e("p",[t._v("Go to layout manager page (dropdown menu on top right), and then click on "),e("em",[e("strong",[t._v("+New")])]),t._v(" tab."),e("br"),t._v("\nSelect item type (widgets), enter title (title needs to be the same as template name) and that's it."),e("br"),t._v("\nThis will add your new widget to the layout manager.")]),t._v(" "),e("p",[e("img",{attrs:{src:s(148),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"create-widget-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-widget-file","aria-hidden":"true"}},[t._v("#")]),t._v(" Create Widget File")]),t._v(" "),e("p",[t._v("Last step is to create widget php file. File needs to be located in "),e("em",[e("strong",[t._v("/widgets/")])]),t._v(" folder, and needs to have same name as your widget template name.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("├── widgets\n    ├── my-widget.php\n")])])]),e("p",[t._v("Use "),e("code",[t._v("$widget")]),t._v(" variable to access your widget fields and options...")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("/**\n *  My Widget\n *  \n *  @var widget\n *\n */")]),t._v("\n\n"),e("span",{attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),t._v(" "),e("span",{attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{attrs:{class:"token attr-value"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tm-css-title"),e("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[t._v("<?=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$widget")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("heading")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("title")]),t._v(" "),e("span",{attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{attrs:{class:"token attr-value"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tm-css-content"),e("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[t._v("<?=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$widget")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("body")]),t._v(" "),e("span",{attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),e("h3",{attrs:{id:"for-multiple-layouts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-multiple-layouts","aria-hidden":"true"}},[t._v("#")]),t._v(" For Multiple Layouts")]),t._v(" "),e("p",[t._v("If you decide to add your widget to the layout manager (see "),e("em",[t._v("Create Layout Manager Option")]),t._v("), you need to create widget folder and default layout file:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("├── widgets\n    ├── my-widget\n        ├── default.php\n    ├── my-widget.php\n")])])]),e("p",[t._v("In this case your main widget file (eg: my-widget.php) would look like this:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("/**\n *  My Widget\n *\n *  @var widget\n *\n */")]),t._v("\n\n"),e("span",{attrs:{class:"token variable"}},[t._v("$layout")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$pages")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token function"}},[t._v("get")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"/system/layout-manager/widgets/my-widget/"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("layout_options")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("name")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("include")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"./my-widget/'),e("span",{attrs:{class:"token interpolation"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token variable"}},[t._v("$layout")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('.php"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),e("p",[t._v("And default.php")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("/**\n *  My Widget Default\n *  \n *  @var widget\n *\n */")]),t._v("\n\n"),e("span",{attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),t._v(" "),e("span",{attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{attrs:{class:"token attr-value"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tm-css-title"),e("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[t._v("<?=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$widget")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("heading")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("title")]),t._v(" "),e("span",{attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{attrs:{class:"token attr-value"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tm-css-content"),e("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[t._v("<?=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$widget")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token property"}},[t._v("body")]),t._v(" "),e("span",{attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n"),e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token tag"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])])])}],n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);o.options.__file="README.md";a.default=o.exports}}]);